name: CI

on:
    push:
        branches: [main, master]
    pull_request:
        branches: [main, master]

jobs:
    lua-quality:
        name: Lua Quality Checks
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install StyLua
              uses: JohnnyMorganz/stylua-action@v4
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  version: latest
                  args: --check .

            - name: Install Selene
              run: |
                  wget -q https://github.com/Kampfkarren/selene/releases/latest/download/selene-linux.zip
                  unzip selene-linux.zip
                  chmod +x selene
                  sudo mv selene /usr/local/bin/

            - name: Run Selene linting
              run: selene lua/

            - name: Validate plugin structure
              run: |
                  # Check required files exist
                  test -f lua/al/init.lua || (echo "Missing lua/al/init.lua" && exit 1)
                  test -f README.md || (echo "Missing README.md" && exit 1)

                  # Check Lua syntax
                  find lua/ -name "*.lua" -exec lua -l {} \; > /dev/null

    go-quality:
        name: Go Quality Checks
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: "1.21"

            - name: Check Go formatting
              run: |
                  cd proxy-src
                  if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
                    echo "Go code is not formatted. Please run 'gofmt -s -w .'"
                    gofmt -s -l .
                    exit 1
                  fi

            - name: Install golangci-lint
              run: |
                  curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.2

            - name: Run golangci-lint
              run: |
                  cd proxy-src
                  $(go env GOPATH)/bin/golangci-lint run

            - name: Verify Go modules
              run: |
                  cd proxy-src
                  go mod tidy
                  go mod verify

    documentation:
        name: Documentation Checks
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Check README links
              run: |
                  # Basic check for broken internal links
                  grep -n "](\./" README.md | while read line; do
                    file=$(echo "$line" | sed 's/.*](\.\///g' | sed 's/).*//g')
                    if [ ! -f "$file" ]; then
                      echo "Broken link found: $file"
                      exit 1
                    fi
                  done

            - name: Validate configuration files
              run: |
                  # Check TOML syntax
                  python3 -c "
                  import tomllib
                  with open('stylua.toml', 'rb') as f:
                      tomllib.load(f)
                  with open('selene.toml', 'rb') as f:
                      tomllib.load(f)
                  print('TOML files are valid')
                  "
